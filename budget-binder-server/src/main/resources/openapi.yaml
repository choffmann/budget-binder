openapi: 3.0.3
info:
  description: Budget-Binder-Server API
  title: Budget-Binder-Server API
  version: 0.1.0
paths:
  /:
    get:
      responses:
        200:
          description: OK
      summary: 'GET '
  /login:
    post:
      tags:
        - Auth
      summary: Login a User
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Access-Token'
        401:
          description: Not-Authorized
  /register:
    post:
      tags:
        - Auth
      summary: Register a User
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        401:
          description: Not-Authorized
  /me:
    get:
      tags:
        - Users
      summary: Get your own User Object
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        401:
          description: Not-Authorized
      security:
        - LoginBearer: [ ]
    patch:
      tags:
        - Users
      summary: Change your own User Object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPut'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        401:
          description: Not-Authorized
    delete:
      tags:
        - Users
      summary: Delete your own User Object
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        401:
          description: Not-Authorized
components:
  schemas:
    ErrorModel:
      title: ErrorModel
      properties:
        message:
          title: Message
          type: string
    Login:
      title: Login
      required:
        - username
        - password
      type: object
      properties:
        username:
          title: Username
          type: string
        password:
          title: Password
          type: string
    Access-Token:
      title: Access-Token
      required:
        - success
      type: object
      properties:
        data:
          title: Data
          type: object
          properties:
            token:
              title: Token
              type: string
        error:
          $ref: '#/components/schemas/ErrorModel'
        success:
          title: Success
          type: boolean
    User:
      title: User
      required:
        - id
        - firstName
        - name
        - email
        - password
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        firstName:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
          writeOnly: true
    UserPut:
      title: User Put
      type: object
      properties:
        firstName:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        password:
          nullable: true
          type: string
    UserResponse:
      title: User Response
      required:
        - success
      type: object
      properties:
        data:
          $ref: '#/components/schemas/User'
        error:
          $ref: '#/components/schemas/ErrorModel'
        success:
          title: Success
          type: boolean
    Entry:
      title: Entry
      required:
        - id
        - name
        - amount
        - repeat
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        amount:
          type: number
        repeat:
          type: boolean
        category_id:
          nullable: true
          type: integer
    EntryPut:
      title: Entry Put
      type: object
      properties:
        name:
          nullable: true
          type: string
        amount:
          nullable: true
          type: number
        repeat:
          nullable: true
          type: boolean
        category_id:
          nullable: true
          type: integer
    EntryResponse:
      title: Entry Response
      required:
        - success
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Entry'
        error:
          $ref: '#/components/schemas/ErrorModel'
        success:
          title: Success
          type: boolean
    Category:
      title: Category
      required:
        - id
        - name
        - color
        - image
        - budget
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        color:
          $ref: '#/components/schemas/Color'
        image:
          $ref: '#/components/schemas/Image'
        budget:
          type: number
    CategoryPut:
      title: Category Put
      type: object
      properties:
        name:
          nullable: true
          type: string
        color:
          $ref: '#/components/schemas/Color'
        image:
          $ref: '#/components/schemas/Image'
        budget:
          nullable: true
          type: number
    CategoryResponse:
      title: Category Response
      required:
        - success
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Category'
        error:
          $ref: '#/components/schemas/ErrorModel'
        success:
          title: Success
          type: boolean
    Color:
      type: string
      enum:
        - black
        - white
        - red
        - green
        - blue
    Image:
      type: string
      enum:
        - shopping

  securitySchemes:
    LoginBearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
